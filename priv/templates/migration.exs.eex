defmodule Ectorole.Repo.Migrations.EctoRole do
  use Ecto.Migration

  def change do
    create table(:er_entity) do
      add :key, :string, null: false

    end

    create table(:er_schema) do
      add :name, :string, null: false
      add :fields, :string, null: false

      timestamps()
    end

    create index(:er_entity, [:key],[unique: true])


    create table(:er_permission) do
      add :name, :string, null: false
      add :read, :string, null: false
      add :write, :string, null: false
      add :create, :boolean, null: false
      add :delete, :boolean, null: false
      add :key, :string, null: false

      timestamps()
    end

    create index(:er_permission, [:key],[unique: true])


    create table(:er_role) do
      add :name, :string, null: false
      add :key, :string, null: false
    end

    create index(:er_role, [:key],[unique: true])


    create table(:er_role_to_entity) do
      add :role_key, references(:er_role, column: :key, type: :string)
      add :entity_key, references(:er_entity, column: :key, type: :string)
    end


    create table(:er_role_to_permission) do
      add :role_key, references(:er_role, column: :key, type: :string)
      add :permission_key, references(:er_permission, column: :key, type: :string)
    end

  alter table(:er_permission) do
     add :schema_id,  references(:er_schema)
     end

  end

end
